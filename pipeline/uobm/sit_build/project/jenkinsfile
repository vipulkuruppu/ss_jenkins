/* ==============================================================
 Jenkins pipeline for PLCE SIT Deployment
 [Non single source]

 Created by: Vipul Kuruppu
 Created on: 18-05-2018

 Change list:

============================================================== */

pipeline
{
	agent { label 'CLSTSG80-AIX' }
	parameters
	{
		string(defaultValue: 'branches/devmt/MY_ISS_FEA_NRA_2018', description: 'Enter SVN Path Relative to Country root (Note: https://lxclstcgv99.sg.uobnet.com:9999/svn/PLCE/Region/[COUNTRY]/ will be added automatically', name: 'COUNTRY_SVN_Branch')
		choice(choices: 'MY', description: 'Select country', name: 'Country')
		booleanParam(defaultValue: true, description: 'Select to deploy online', name: 'ONLINE')
		booleanParam(defaultValue: true, description: 'Select to deploy bin scripts', name: 'SCRIPTS')
		booleanParam(defaultValue: true, description: 'Select to deploy CD scripts', name: 'CDSCRIPTS')
		choice(choices: 'sit2', description: 'Select SIT Environment to deploy', name: 'Deploy_Env')
	}

	stages
	{

		/* ============================================== Compile Build ================================================================ */

		stage("Initialize Jenkins Environment")
		{
			steps
			{
				script
				{
					sh "if [ -d ${WORKSPACE}/logs ]; then rm -rf ${WORKSPACE}/logs/*; else mkdir -p ${WORKSPACE}/logs; fi"
					sh "if [ -d ${WORKSPACE}/tmp ]; then rm -rf ${WORKSPACE}/tmp/*; else mkdir -p ${WORKSPACE}/tmp; fi"
					sh "if [ -d ${WORKSPACE}/articacts ]; then rm -rf ${WORKSPACE}/articacts/*; else mkdir -p ${WORKSPACE}/articacts; fi"
					sh "echo '-------------------------------------------------------------------------' > ${WORKSPACE}/logs/pipeline.log"
					sh "echo 'Jenkins pipeline started at : '\$(date) >> ${WORKSPACE}/logs/pipeline.log"
					sh "echo '-------------------------------------------------------------------------' >> ${WORKSPACE}/logs/pipeline.log"
					sh "echo 'Selected modules:' >> ${WORKSPACE}/logs/pipeline.log"
					if (params.ONLINE)
						{
							sh "echo 'ONLINE' >> ${WORKSPACE}/logs/pipeline.log"
						}
					if (params.SCRIPTS)
						{
							sh "echo 'SCRIPTS' >> ${WORKSPACE}/logs/pipeline.log"
						}
					if (params.CDSCRIPTS)
						{
							sh "echo 'CDSCRIPTS' >> ${WORKSPACE}/logs/pipeline.log"
						}
					sh "echo '-------------------------------------------------------------------------' >> ${WORKSPACE}/logs/pipeline.log"
					sh "echo >> ${WORKSPACE}/logs/pipeline.log"
				}
			}
		}

		/* ============================================== Checkout from SVN ================================================================ */

		stage("Checkout Code From SVN")
		{
			when
			{
				expression { return ( params.ONLINE || params.SCRIPTS || params.CDSCRIPTS ) }
			}
			steps
			{
				echo "${Country} - Checking out https://lxclstsgv99.sg.uobnet.com:9999/svn/PLCE/Region/${Country}/${COUNTRY_SVN_Branch}"
				sh "echo >> ${WORKSPACE}/logs/pipeline.log"
				sh "echo 'Starting '${Country}' Specific Actions -------------------' >> ${WORKSPACE}/logs/pipeline.log"
				sh "echo >> ${WORKSPACE}/logs/pipeline.log"
				sh "echo ${Country}' - Checking out https://lxclstsgv99.sg.uobnet.com:9999/svn/PLCE/Region/'${Country}'/'${COUNTRY_SVN_Branch} >> ${WORKSPACE}/logs/pipeline.log"
				checkout([
					$class: 'SubversionSCM',
					additionalCredentials: [],
					excludedCommitMessages: '',
					excludedRegions: '',
					excludedRevprop: '',
					excludedUsers: '',
					filterChangelog: false,
					ignoreDirPropChanges: false,
					includedRegions: '',
					locations: [[credentialsId: 'JENKINS_SVN',
								depthOption: 'infinity',
								ignoreExternalsOption: true,
								local: "./svn_src/${Country}",
								remote: "https://lxclstsgv99.sg.uobnet.com:9999/svn/PLCE/Region/${Country}/${COUNTRY_SVN_Branch}" ]],
					workspaceUpdater: [$class: 'CheckoutUpdater']
				])

			}
		}

		/* ============================================== Tag Codes ================================================================ */

		stage("Tag codes for the build")
		{
			when
			{
				expression { return ( params.ONLINE || params.SCRIPTS || params.CDSCRIPTS ) }
			}
			steps
			{
				script
				{

					if (params.ONLINE)
						{
							echo "${Country} - ONLINE - Tag codes for the build"
							sh "chmod 755 ${WORKSPACE}/*.sh"
							sh "${WORKSPACE}/prepare_sorce_zip.sh country=${Country} module=ONLINE >> ${WORKSPACE}/logs/pipeline.log"
						}
					if (params.SCRIPTS)
						{
							echo "${Country} - SCRIPTS - Tag codes for the build"
							sh "chmod 755 ${WORKSPACE}/*.sh"
							sh "${WORKSPACE}/prepare_sorce_zip.sh country=${Country} module=SCRIPTS >> ${WORKSPACE}/logs/pipeline.log"
						}
					if (params.CDSCRIPTS)
						{
							echo "${Country} - CDSCRIPTS - Tag codes for the build"
							sh "chmod 755 ${WORKSPACE}/*.sh"
							sh "${WORKSPACE}/prepare_sorce_zip.sh country=${Country} module=CDSCRIPTS >> ${WORKSPACE}/logs/pipeline.log"
						}
				}
			}
			post
			{
				success
				{
					archiveArtifacts(artifacts: "articacts/*", allowEmptyArchive: true)
				}
			}
		}

		/* ============================================== Compile ================================================================ */

		stage("ONLINE - Compile and Build")
		{
			when
			{
				expression { return params.ONLINE }
			}
			steps
			{
				echo "${Country} - ONLINE - Compile and Build"
				sh "chmod 755 ${WORKSPACE}/*.sh"
				sh "${WORKSPACE}/online_compile.sh country=${Country} module=ONLINE >> ${WORKSPACE}/logs/pipeline.log"

			}
		}

		stage("SCRIPTS - Compile and Build")
		{
			when
			{
				expression { return params.SCRIPTS }
			}
			steps
			{
				echo "${Country} - SCRIPTS - Compile and Build"
				sh "chmod 755 ${WORKSPACE}/*.sh"
				sh "${WORKSPACE}/scripts_compile.sh country=${Country} module=SCRIPTS >> ${WORKSPACE}/logs/pipeline.log"

			}
		}

		stage("CDSCRIPTS - Compile and Build")
		{
			when
			{
				expression { return params.CDSCRIPTS }
			}
			steps
			{
				echo "${Country} - CDSCRIPTS - Compile and Build"
				sh "chmod 755 ${WORKSPACE}/*.sh"
				sh "${WORKSPACE}/cdscripts_compile.sh country=${Country} module=CDSCRIPTS >> ${WORKSPACE}/logs/pipeline.log"

			}
		}

		/* ============================================== Deploy ================================================================ */
		
		stage("ONLINE - Deployment")
		{
			when
			{
				expression { return params.ONLINE }
			}
			steps
			{
				echo "${Country} - ONLINE - Compile and Build"
				sh "chmod 755 ${WORKSPACE}/*.sh"
				sh "${WORKSPACE}/online_deploy.sh country=${Country} module=ONLINE deploy_env=${Deploy_Env} >> ${WORKSPACE}/logs/pipeline.log"

			}
		}

		stage("SCRIPTS - Deployment")
		{
			when
			{
				expression { return params.SCRIPTS }
			}
			steps
			{
				echo "${Country} - SCRIPTS - Compile and Build"
				sh "chmod 755 ${WORKSPACE}/*.sh"
				sh "${WORKSPACE}/scripts_deploy.sh country=${Country} module=SCRIPTS deploy_env=${Deploy_Env} >> ${WORKSPACE}/logs/pipeline.log"

			}
		}

		stage("CDSCRIPTS - Deployment")
		{
			when
			{
				expression { return params.CDSCRIPTS }
			}
			steps
			{
				echo "${Country} - CDSCRIPTS - Compile and Build"
				sh "chmod 755 ${WORKSPACE}/*.sh"
				sh "${WORKSPACE}/cdscripts_deploy.sh country=${Country} module=CDSCRIPTS deploy_env=${Deploy_Env} >> ${WORKSPACE}/logs/pipeline.log"

			}
		}
	}

	post
	{
		failure
		{
			archiveArtifacts(artifacts: "logs/pipeline.log", allowEmptyArchive: true)
			sh "chmod 755 ${WORKSPACE}/*.sh"
			sh "${WORKSPACE}/mailx.sh ${WORKSPACE}/tmp/${Country}.release 1 1 ${WORKSPACE}/logs/pipeline.log ${Country} ${Deploy_Env}"
		}
		success
		{
			archiveArtifacts(artifacts: "logs/pipeline.log", allowEmptyArchive: true)
			sh "chmod 755 ${WORKSPACE}/*.sh"
			sh "${WORKSPACE}/mailx.sh ${WORKSPACE}/tmp/${Country}.release 0 1 ${WORKSPACE}/logs/pipeline.log ${Country} ${Deploy_Env}"
		}
	}
}

